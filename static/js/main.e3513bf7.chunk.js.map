{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","index.js"],"names":["module","exports","Controls","value","handleAmountSubmit","handleDeposit","handleWithdrawal","className","styles","controls","type","input","onChange","button","onClick","Balance","balance","withdrawals","deposits","role","aria-label","TransactionHistory","transactions","history","length","map","transaction","key","id","amount","date","toast","configure","autoClose","draggable","Dashboard","event","setState","inputValue","target","Math","round","Number","state","warn","uuidv4","Date","toLocaleString","prevState","error","this","dashboard","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3513bf7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__364F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__SM7wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3P2VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__qfTtN\",\"button\":\"Controls_button__3Pedh\",\"input\":\"Controls_input__30Qcf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Controls.module.css\";\n\nconst Controls = ({\n  value,\n  handleAmountSubmit,\n  handleDeposit,\n  handleWithdrawal,\n}) => {\n  return (\n    <section className={styles.controls}>\n      <input\n        value={value}\n        type=\"number\"\n        className={styles.input}\n        onChange={handleAmountSubmit}\n      />\n      <button type=\"button\" className={styles.button} onClick={handleDeposit}>\n        Deposit\n      </button>\n      <button\n        type=\"button\"\n        className={styles.button}\n        onClick={handleWithdrawal}>\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleAmountSubmit: PropTypes.func.isRequired,\n  handleDeposit: PropTypes.func.isRequired,\n  handleWithdrawal: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Balance.module.css\";\n\nconst Balance = ({ balance, withdrawals, deposits }) => {\n  return (\n    <section className={styles.balance}>\n      <span role=\"img\" aria-label=\"deposits\">\n        ⬆️${deposits}\n      </span>\n      <span role=\"img\" aria-label=\"withdrawals\">\n        ⬇️${withdrawals}\n      </span>\n      <span>Balance: ${balance}</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  withdrawals: PropTypes.number.isRequired,\n  deposits: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\n\r\nconst TransactionHistory = ({ transactions }) => {\r\n  return (\r\n    <table className={styles.history}>\r\n      <thead>\r\n        <tr>\r\n          <th>Transaction</th>\r\n          <th>Amount</th>\r\n          <th>Date</th>\r\n        </tr>\r\n      </thead>\r\n      {transactions.length > 0 && (\r\n        <tbody>\r\n          {transactions.map(transaction => (\r\n            <tr key={transaction.id}>\r\n              <td>{transaction.type}</td>\r\n              <td>${transaction.amount}</td>\r\n              <td>{transaction.date}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      )}\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n      date: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport { toast } from \"react-toastify\";\nimport Controls from \"../Controls/Controls\";\nimport Balance from \"../Balance/Balance\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styles from \"./Dashboard.module.css\";\n\ntoast.configure({\n  autoClose: 6000,\n  draggable: false,\n});\n\nexport default class Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      transactions: [],\n      balance: 0,\n      inputValue: \"\",\n    };\n    this.deposits = 0;\n    this.withdrawals = 0;\n    this.amount = 0;\n  }\n\n  handleAmountSubmit = event => {\n    this.setState({\n      inputValue: event.target.value,\n    });\n  };\n\n  handleDeposit = () => {\n    this.amount = Math.round(Number(this.state.inputValue) * 100) / 100;\n\n    if (this.amount <= 0) {\n      toast.warn(\"Введите сумму для проведения операции!\");\n      return;\n    }\n\n    const transaction = {\n      id: uuidv4(),\n      type: \"deposit\",\n      amount: this.amount,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n      balance: Math.round((prevState.balance + this.amount) * 100) / 100,\n      inputValue: \"\",\n    }));\n\n    this.deposits = Math.round((this.deposits + this.amount) * 100) / 100;\n  };\n\n  handleWithdrawal = () => {\n    this.amount = Math.round(Number(this.state.inputValue) * 100) / 100;\n\n    if (this.amount <= 0) {\n      toast.warn(\"Введите сумму для проведения операции!\");\n      return;\n    }\n\n    if (this.amount > this.state.balance) {\n      toast.error(\"На счету недостаточно средств для проведения операции!\");\n      return;\n    }\n\n    const transaction = {\n      id: uuidv4(),\n      type: \"withdrawal\",\n      amount: this.amount,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n      balance: Math.round((prevState.balance - this.amount) * 100) / 100,\n      inputValue: \"\",\n    }));\n\n    this.withdrawals = Math.round((this.withdrawals + this.amount) * 100) / 100;\n  };\n\n  render() {\n    const { inputValue, transactions, balance } = this.state;\n\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          value={inputValue}\n          handleAmountSubmit={this.handleAmountSubmit}\n          handleDeposit={this.handleDeposit}\n          handleWithdrawal={this.handleWithdrawal}\n        />\n        <Balance\n          balance={balance}\n          deposits={this.deposits}\n          withdrawals={this.withdrawals}\n        />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dashboard from \"./components/Dashboard/Dashboard\";\nimport \"./styles.css\";\n\nReactDOM.render(<Dashboard />, document.getElementById(\"root\"));\n"],"sourceRoot":""}