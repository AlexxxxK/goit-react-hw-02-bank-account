{"version":3,"sources":["components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Dashboard.module.css","components/Controls/Controls.module.css","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","Controls","value","handleAmountSubmit","handleTransaction","className","styles","controls","type","min","step","placeholder","input","onChange","name","button","onClick","Balance","transactions","balance","role","aria-label","Math","round","reduce","sum","transaction","amount","TransactionHistory","history","length","map","key","id","date","toast","configure","autoClose","draggable","Dashboard","state","inputAmount","target","setState","Number","test","warn","error","uuidv4","Date","toLocaleString","prevState","this","dashboard","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.64a92521.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__364F1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__SM7wz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__3P2VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__qfTtN\",\"button\":\"Controls_button__3Pedh\",\"input\":\"Controls_input__30Qcf\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Controls.module.css\";\n\nconst Controls = ({ value, handleAmountSubmit, handleTransaction }) => (\n  <section className={styles.controls}>\n    <input\n      value={value}\n      type=\"number\"\n      min=\"0.01\"\n      step=\"0.01\"\n      placeholder=\"$0.00\"\n      className={styles.input}\n      onChange={handleAmountSubmit}\n    />\n    <button\n      type=\"button\"\n      name=\"deposit\"\n      className={styles.button}\n      onClick={handleTransaction}\n    >\n      Deposit\n    </button>\n    <button\n      type=\"button\"\n      name=\"withdraw\"\n      className={styles.button}\n      onClick={handleTransaction}\n    >\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  value: PropTypes.string.isRequired,\n  handleAmountSubmit: PropTypes.func.isRequired,\n  handleTransaction: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Balance.module.css\";\n\nconst Balance = ({ transactions }) => (\n  <section className={styles.balance}>\n    <span role=\"img\" aria-label=\"deposits\">\n      ⬆️$\n      {Math.round(\n        transactions.reduce(\n          (sum, transaction) =>\n            transaction.type === \"deposit\" ? sum + transaction.amount : sum,\n          0,\n        ) * 100,\n      ) / 100}\n    </span>\n    <span role=\"img\" aria-label=\"withdrawals\">\n      ⬇️$\n      {Math.round(\n        transactions.reduce(\n          (sum, transaction) =>\n            transaction.type === \"withdrawal\" ? sum + transaction.amount : sum,\n          0,\n        ) * 100,\n      ) / 100}\n    </span>\n    <span>\n      Balance: $\n      {Math.round(\n        transactions.reduce(\n          (sum, transaction) =>\n            transaction.type === \"deposit\"\n              ? sum + transaction.amount\n              : sum - transaction.amount,\n          0,\n        ) * 100,\n      ) / 100}\n    </span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default Balance;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./TransactionHistory.module.css\";\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    {transactions.length > 0 && (\n      <tbody>\n        {transactions.map(transaction => (\n          <tr key={transaction.id}>\n            <td>{transaction.type}</td>\n            <td>${transaction.amount}</td>\n            <td>{transaction.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    )}\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from \"react\";\nimport uuidv4 from \"uuid/v4\";\nimport { toast } from \"react-toastify\";\nimport Controls from \"../Controls/Controls\";\nimport Balance from \"../Balance/Balance\";\nimport TransactionHistory from \"../TransactionHistory/TransactionHistory\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport styles from \"./Dashboard.module.css\";\n\ntoast.configure({\n  autoClose: 6000,\n  draggable: false,\n});\n\nexport default class Dashboard extends Component {\n  state = {\n    transactions: [],\n    inputAmount: \"\",\n  };\n\n  handleAmountSubmit = ({ target }) => {\n    this.setState({\n      inputAmount: target.value,\n    });\n  };\n\n  handleTransaction = ({ target }) => {\n    const { name } = target;\n    const amount = Number(this.state.inputAmount);\n    const balance =\n      Math.round(\n        this.state.transactions.reduce(\n          (sum, transaction) =>\n            transaction.type === \"deposit\"\n              ? sum + transaction.amount\n              : sum - transaction.amount,\n          0,\n        ) * 100,\n      ) / 100;\n    const regex = /^\\d+(\\.\\d{0,2})?$/g;\n\n    if (amount <= 0 || !regex.test(this.state.inputAmount)) {\n      toast.warn(\"Введите сумму для проведения операции!\");\n      return;\n    }\n\n    if (name === \"withdraw\" && amount > balance) {\n      toast.error(\"На счету недостаточно средств для проведения операции!\");\n      return;\n    }\n\n    const transaction = {\n      id: uuidv4(),\n      type: name === \"deposit\" ? \"deposit\" : \"withdrawal\",\n      amount,\n      date: new Date().toLocaleString(),\n    };\n\n    this.setState(prevState => ({\n      transactions: [...prevState.transactions, transaction],\n      inputAmount: \"\",\n    }));\n  };\n\n  render() {\n    const { inputAmount, transactions } = this.state;\n\n    return (\n      <div className={styles.dashboard}>\n        <Controls\n          value={inputAmount}\n          handleAmountSubmit={this.handleAmountSubmit}\n          handleTransaction={this.handleTransaction}\n        />\n        <Balance transactions={transactions} />\n        <TransactionHistory transactions={transactions} />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Dashboard from \"../Dashboard/Dashboard\";\nimport \"./App.module.css\";\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}